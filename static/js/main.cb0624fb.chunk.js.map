{"version":3,"sources":["data/food.data.js","components/card.component.js","App.js","reportWebVitals.js","index.js"],"names":["Food","breakfast","breakfastName","complexCarbohydratesName","complexCarbohydrates","fatsName","fats","proteinsName","proteins","snack1","snack1Name","snackA","snackB","lunch","lunchName","fiberName","fiber","snack2","snack2Name","dinner","dinnerName","extraName","extra","FoodCard","CardGroup","Card","style","width","backgroundColor","Img","variant","src","maxHeight","maxWidth","alignSelf","Body","Title","fontWeight","className","Header","Text","map","item","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cb0624fb.chunk.js","sourcesContent":["const Food = {\n    breakfast: {\n        breakfastName: 'Завтрак',\n        complexCarbohydratesName: 'Сложные углеводы (180-200г)',\n        complexCarbohydrates: [\n            'гречневая',\n            'овсяная',\n            'смесь злаков',\n            'перловка',\n            'полба',\n            'ячневая',\n            'пшеничная (НЕ пшенная)',\n        ],\n        fatsName: 'Жиры',\n        fats: ['сливочное масло 5-7г'],\n        proteinsName: 'Белки',\n        proteins: [\n            'творог обезжиренный 80-100г',\n            '1 яйцо и 1 белок',\n            'омлет из 1 яйца',\n            'курица 60г',\n            'рыба 60г',\n            'куриные сосиски 60г',\n            'чай черный или зеленый',\n        ],\n    },\n\n    snack1: {\n        snack1Name: 'Перекус 1',\n        snackA: ['любой фрукт 200г + йогурт 200г + орехи 15г'],\n        snackB: ['два любых фрукта 300г + орехи 15г'],\n    },\n\n    lunch: {\n        lunchName: 'Обед',\n        proteinsName: 'Белки',\n        proteins: [\n            'говядина',\n            'индейка',\n            'курица',\n            'белая рыба',\n            'котлеты (все по 80-100г)',\n            'суп овощной с мясом или рыбой',\n            'плов (все по 300г)',\n            'cалат овощной или свежие овощи (200-250г)',\n        ],\n        complexCarbohydratesName: 'Сложные углеводы (100-120г)',\n        complexCarbohydrates: ['гречка', 'булгур', 'киноа', 'плов'],\n\n        fiberName: 'Клетчатка (150-200г)',\n        fiber: [\n            'салат из свежих овощей',\n            'тушеные овощи',\n            'запеченые овощи',\n            'свежие овощи',\n            'можно комбинировать гарнир: 100г гречки + 150г салата',\n        ],\n    },\n    snack2: {\n        snack2Name: 'Перекус 2',\n        snackA: [\n            'натуральный йогурт 200г + хлебцы',\n            'творог обезжиренный 100г + хлебцы',\n            'свежие овощи 200г',\n            'салат овощной с курицей или креветками 300г',\n            '1 сэндвич с курицей, индейкой, овощами',\n        ],\n        snackB: ['два сухофрукта', 'горький шоколад'],\n    },\n\n    dinner: {\n        dinnerName: 'Ужин',\n        fiberName: 'Клетчатка (250-300г)',\n        fiber: ['свежие овощи с маслом', 'тушеные овощи'],\n        proteinsName: 'Белки (80-100г)',\n        proteins: ['белая рыба', 'морепродукты', 'курица'],\n        extraName: 'Экстра (1 кусок)',\n        extra: ['хлеб черный', 'хлеб серый'],\n    },\n};\n\nexport default Food;\n","import React from 'react';\n\nimport Card from 'react-bootstrap/Card';\nimport CardGroup from 'react-bootstrap/CardGroup';\n\nimport '../styles/card.scss';\nimport Food from '../data/food.data';\n\nconst FoodCard = () => {\n    return (\n        <>\n            <CardGroup>\n                <Card style={{ width: '23rem', backgroundColor: '#cbe4f9' }}>\n                    <Card.Img\n                        variant=\"top\"\n                        src=\"food-rd/img/breakfast.png\"\n                        style={{\n                            maxHeight: '10vh',\n                            maxWidth: '10vh',\n                            alignSelf: 'center',\n                        }}\n                    />\n                    <Card.Body>\n                        <Card.Title\n                            style={{ fontWeight: 'bold' }}\n                            className=\"bg-light\"\n                        >\n                            Завтрак\n                        </Card.Title>\n                        <Card.Header>\n                            {Food.breakfast.complexCarbohydratesName}\n                        </Card.Header>\n                        <Card.Text>\n                            {Food.breakfast.complexCarbohydrates.map((item) => (\n                                <li>{item}</li>\n                            ))}\n                        </Card.Text>\n                        <Card.Header>{Food.breakfast.fatsName}</Card.Header>\n                        <Card.Text>\n                            {Food.breakfast.fats.map((item) => (\n                                <li>{item}</li>\n                            ))}\n                        </Card.Text>\n                        <Card.Header>{Food.breakfast.proteinsName}</Card.Header>\n                        <Card.Text>\n                            {Food.breakfast.proteins.map((item) => (\n                                <li>{item}</li>\n                            ))}\n                        </Card.Text>\n                    </Card.Body>\n                </Card>\n                <Card style={{ width: '23rem', backgroundColor: '#cdf5f6' }}>\n                    <Card.Img\n                        variant=\"top\"\n                        src=\"food-rd/img/lunch.png\"\n                        style={{\n                            maxHeight: '10vh',\n                            maxWidth: '10vh',\n                            alignSelf: 'center',\n                        }}\n                    />\n                    <Card.Body>\n                        <Card.Title\n                            style={{ fontWeight: 'bold' }}\n                            className=\"bg-light\"\n                        >\n                            {Food.snack1.snack1Name}\n                        </Card.Title>\n                        <Card.Title\n                            style={{ fontWeight: 'bold' }}\n                            className=\"bg-light\"\n                        >\n                            Вариант 1\n                        </Card.Title>\n                        <Card.Text>\n                            {Food.snack1.snackA.map((item) => (\n                                <li>{item}</li>\n                            ))}\n                        </Card.Text>\n                        <Card.Title\n                            style={{ fontWeight: 'bold' }}\n                            className=\"bg-light\"\n                        >\n                            Вариант 2\n                        </Card.Title>\n                        <Card.Text>\n                            {Food.snack1.snackB.map((item) => (\n                                <li>{item}</li>\n                            ))}\n                        </Card.Text>\n                    </Card.Body>\n                </Card>\n                <Card style={{ width: '23rem', backgroundColor: '#eff9da' }}>\n                    <Card.Img\n                        variant=\"top\"\n                        src=\"food-rd/img/dinner.png\"\n                        style={{\n                            maxHeight: '10vh',\n                            maxWidth: '10vh',\n                            alignSelf: 'center',\n                        }}\n                    />\n                    <Card.Body>\n                        <Card.Title\n                            style={{ fontWeight: 'bold' }}\n                            className=\"bg-light\"\n                        >\n                            {Food.lunch.lunchName}\n                        </Card.Title>\n                        <Card.Text>\n                            <Card.Header>{Food.lunch.proteinsName}</Card.Header>\n                            {Food.lunch.proteins.map((item) => (\n                                <li>{item}</li>\n                            ))}\n                            <Card.Header>\n                                {Food.lunch.complexCarbohydratesName}\n                            </Card.Header>\n                            {Food.lunch.complexCarbohydrates.map((item) => (\n                                <li>{item}</li>\n                            ))}\n\n                            <Card.Header>{Food.lunch.fiberName}</Card.Header>\n                            {Food.lunch.fiber.map((item) => (\n                                <li>{item}</li>\n                            ))}\n                        </Card.Text>\n                    </Card.Body>\n                </Card>\n                <Card style={{ width: '23rem', backgroundColor: '#f9ebdf' }}>\n                    <Card.Img\n                        variant=\"top\"\n                        src=\"food-rd/img/lunch.png\"\n                        style={{\n                            maxHeight: '10vh',\n                            maxWidth: '10vh',\n                            alignSelf: 'center',\n                        }}\n                    />\n                    <Card.Body>\n                        <Card.Title\n                            style={{ fontWeight: 'bold' }}\n                            className=\"bg-light\"\n                        >\n                            {Food.snack2.snack2Name}\n                        </Card.Title>\n                        <Card.Title\n                            style={{ fontWeight: 'bold' }}\n                            className=\"bg-light\"\n                        >\n                            Что-то из этого\n                        </Card.Title>\n                        <Card.Text>\n                            {Food.snack2.snackA.map((item) => (\n                                <li>{item}</li>\n                            ))}\n                        </Card.Text>\n                        <Card.Title\n                            style={{ fontWeight: 'bold' }}\n                            className=\"bg-light\"\n                        >\n                            Плюс что-то из этого\n                        </Card.Title>\n                        <Card.Text>\n                            {Food.snack2.snackB.map((item) => (\n                                <li>{item}</li>\n                            ))}\n                        </Card.Text>\n                    </Card.Body>\n                </Card>\n                <Card style={{ width: '23rem', backgroundColor: '#f9d8d6' }}>\n                    <Card.Img\n                        variant=\"top\"\n                        src=\"food-rd/img/dinner.png\"\n                        style={{\n                            maxHeight: '10vh',\n                            maxWidth: '10vh',\n                            alignSelf: 'center',\n                        }}\n                    />\n                    <Card.Body>\n                        <Card.Title\n                            style={{ fontWeight: 'bold' }}\n                            className=\"bg-light\"\n                        >\n                            {Food.dinner.dinnerName}\n                        </Card.Title>\n                        <Card.Text>\n                            <Card.Header>{Food.dinner.fiberName}</Card.Header>\n                            {Food.dinner.fiber.map((item) => (\n                                <li>{item}</li>\n                            ))}\n                            <Card.Header>\n                                {Food.dinner.proteinsName}\n                            </Card.Header>\n                            {Food.dinner.proteins.map((item) => (\n                                <li>{item}</li>\n                            ))}\n                            <Card.Header>{Food.dinner.extraName}</Card.Header>\n                            {Food.dinner.extra.map((item) => (\n                                <li>{item}</li>\n                            ))}\n                        </Card.Text>\n                    </Card.Body>\n                </Card>\n            </CardGroup>\n        </>\n    );\n};\n\nexport default FoodCard;\n","import './App.css';\nimport FoodCard from './components/card.component';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <FoodCard />\n            </header>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}